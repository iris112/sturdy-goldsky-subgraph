type User @entity
{
  id:                           ID!
  address:                      Bytes!
  pairs:                        [UserPair!]! @derivedFrom(field: "user")
  addCollaterals:               [AddCollateral!]! @derivedFrom(field: "borrower")
  removeCollaterals:            [RemoveCollateral!]! @derivedFrom(field: "borrower")
  deposits:                     [Deposit!]! @derivedFrom(field: "owner")
  withdraws:                    [Withdraw!]! @derivedFrom(field: "owner")
  borrows:                      [Borrow!]! @derivedFrom(field: "borrower")
  repays:                       [Repay!]! @derivedFrom(field: "borrower")
}

type SturdyPair @entity 
{
  id:                           ID!
  address:                      Bytes!
  asset:                        Token!
  collateralAsset:              Token!
}

type UserPair @entity 
{
  id:                           ID!
  user:                         User!
  pair:                         SturdyPair!
  shareAmount:                  BigInt!
  assetAmount:                  BigInt!
  debtShareAmount:              BigInt!
  debtAssetAmount:              BigInt!
  collateralAmount:             BigInt!
}

type Token @entity 
{
  id:                           ID!
  decimals:                     Int!
  name:                         String!
  symbol:                       String!
}

type AddCollateral @entity
{
  id:                           ID!
  pair:                         SturdyPair!
  sender:                       User!
  borrower:                     User! @relation(name: "UserPairs")
  collateralAmount:             BigInt!
  transaction:                  Bytes!
  timestamp:                    BigInt!
}

type RemoveCollateral @entity
{
  id:                           ID!
  pair:                         SturdyPair!
  sender:                       User!
  receiver:                     User!
  borrower:                     User! @relation(name: "UserPairs")
  collateralAmount:             BigInt!
  transaction:                  Bytes!
  timestamp:                    BigInt!
}

type Deposit @entity
{
  id:                           ID!
  pair:                         SturdyPair!
  caller:                       User!
  owner:                        User! @relation(name: "UserPairs")
  assetAmount:                  BigInt!
  shareAmount:                  BigInt!
  transaction:                  Bytes!
  timestamp:                    BigInt!
}

type Withdraw @entity
{
  id:                           ID!
  pair:                         SturdyPair!
  caller:                       User!
  receiver:                     User!
  owner:                        User! @relation(name: "UserPairs")
  assetAmount:                  BigInt!
  shareAmount:                  BigInt!
  transaction:                  Bytes!
  timestamp:                    BigInt!
}

type Borrow @entity
{
  id:                           ID!
  pair:                         SturdyPair!
  borrower:                     User! @relation(name: "UserPairs")
  receiver:                     User!
  borrowAmount:                 BigInt!
  shareAmount:                  BigInt!
  transaction:                  Bytes!
  timestamp:                    BigInt!
}

type Repay @entity
{
  id:                           ID!
  pair:                         SturdyPair!
  payer:                        User!
  borrower:                     User! @relation(name: "UserPairs")
  assetAmount:                  BigInt!
  shareAmount:                  BigInt!
  transaction:                  Bytes!
  timestamp:                    BigInt!
}